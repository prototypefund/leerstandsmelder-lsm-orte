image: ruby:2.7.2

services:
  - name: mysql:latest
    command: ["--default-authentication-plugin=mysql_native_password"]

variables:
  # BUNDLE_CACHE: "vendor/bundle/"
  RAILS_ENV: "test"
  DB_HOST: mysql
  DB_USERNAME: "orte"
  DB_PASSWORD: "orte00"
  MYSQL_HOST: mysql
  MYSQL_DATABASE: "orte_test"
  MYSQL_USER: "orte"
  MYSQL_PASSWORD: "orte00"
  MYSQL_ROOT_PASSWORD: "orte00"

# cache gems and node_modules for next usage
.default-cache: &default-cache
  cache:
    untracked: true
    key: "$CI_BUILD_NAME"
    paths:
      - node_modules/
      - vendor/
      - public/

stages:
  #  - static
  - test

before_script:
  - gem install bundler --no-document
  - bundle check || bundle install --jobs $(nproc)

# rubocop:
#   <<: *default-cache
#   stage: static
#   script:
#     - bundle exec rubocop

# brakeman:
#   <<: *default-cache
#   stage: static
#   script:
#     - brakeman -w3

test:
  <<: *default-cache
  stage: test
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  variables:
    COVERAGE: "true"
  script:
    # Add Google Chrome to aptitude's (package manager) sources
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" | tee -a /etc/apt/sources.list
    # Fetch Chrome's PGP keys for secure installation
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    # Update aptitude's package sources
    - apt-get -qq update -y
    # Install latest Chrome stable, Xvfb packages
    - apt-get -qq install -y npm google-chrome-stable xvfb gtk2-engines-pixbuf xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable imagemagick x11-apps default-jre
    # Launch Xvfb
    - Xvfb :0 -ac -screen 0 1024x768x24 &
    # Export display for Chrome
    - export DISPLAY=:99
    # Install remaining project dependencies
    - npm install --silent
    # Download Selenium server JAR, drivers for Chrome
    - node ./node_modules/.bin/webdriver-manager update
    - bundle install
    - cp config/database.yml.ci config/database.yml
    - bundle exec rails db:setup
    - bundle exec rake db:migrate
    - bundle exec rspec
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - tmp/screenshots/
      - log/

bundler:audit:
  only:
    - schedules
  script:
    - gem install bundler-audit --no-document
    - bundle install
    - bundle-audit update
    - bundle-audit check
